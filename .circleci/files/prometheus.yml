Description: This template deploys prometheus 
Parameters:
  KeyPair:
    Description: Set a keypair you will use to connect to the instance
    Type: String
    Default: udacity
  Image:
    Description: The ID of the AMI (e.g. ami-0ee8244746ec5d6d4 for Ubuntu 20 deployed in us-west-2 )
    Type: String
    Default: ami-052efd3df9dad4825
  LocalIPAddress:
    Description: This is your local IP address, it will be used to configure security group ingress
    Type: String
    Default: 0.0.0.0/0
  SlackUrl:
    Description: Slack api link for sending notifications
    Type: String
    Default: https://hooks.slack.com/services/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
Resources:
  myWebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for my Web Server Instance
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
          Description: Allows inbound comm on tcp port 80
        - CidrIp: 0.0.0.0/0
          FromPort: 9090
          IpProtocol: tcp
          ToPort: 9090
          Description: Inbound for Prometheus
        - CidrIp: 0.0.0.0/0
          FromPort: 9100
          IpProtocol: tcp
          ToPort: 9100
          Description: Inbound for Prometheus Node Exporter
        - CidrIp: 0.0.0.0/0
          FromPort: 9093
          IpProtocol: tcp
          ToPort: 9093
          Description: Inbound for Alert Manager
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
          Description: Allows inbound comm on SSH port
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
          Description: Allows outward communication on all ports
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-052efd3df9dad4825 # Ubuntu
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SecurityGroups:
      - Ref: myWebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo useradd --no-create-home prometheus
          sudo mkdir /etc/prometheus
          sudo mkdir /var/lib/prometheus
          wget https://github.com/prometheus/prometheus/releases/download/v2.19.0/prometheus-2.19.0.linux-amd64.tar.gz
          tar xvfz prometheus-2.19.0.linux-amd64.tar.gz
          sudo cp prometheus-2.19.0.linux-amd64/prometheus /usr/local/bin
          sudo cp prometheus-2.19.0.linux-amd64/promtool /usr/local/bin/
          sudo cp -r prometheus-2.19.0.linux-amd64/consoles /etc/prometheus
          sudo cp -r prometheus-2.19.0.linux-amd64/console_libraries /etc/prometheus
          sudo cp prometheus-2.19.0.linux-amd64/promtool /usr/local/bin/
          rm -rf prometheus-2.19.0.linux-amd64.tar.gz prometheus-2.19.0.linux-amd64

          wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz
          tar xzf node_exporter-1.0.1.linux-amd64.tar.gz
          sudo cp node_exporter-1.0.1.linux-amd64/node_exporter /usr/local/bin/node_exporter
          rm -rf node_exporter-1.0.1.linux-amd64.tar.gz node_exporter-1.0.1.linux-amd64

          wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz
          tar xvfz alertmanager-0.21.0.linux-amd64.tar.gz
          sudo cp alertmanager-0.21.0.linux-amd64/alertmanager /usr/local/bin
          sudo cp alertmanager-0.21.0.linux-amd64/amtool /usr/local/bin/
          sudo mkdir /var/lib/alertmanager
          rm -rf alertmanager*

          sudo touch /etc/systemd/system/node-exporter.service
          echo "[Unit]" >> /etc/systemd/system/node-exporter.service
          echo "Description=Prometheus Node Exporter Service" >> /etc/systemd/system/node-exporter.service
          echo "After=network.target" >> /etc/systemd/system/node-exporter.service
          echo "[Service]" >> /etc/systemd/system/node-exporter.service
          echo "User=node_exporter" >> /etc/systemd/system/node-exporter.service
          echo "Group=node_exporter" >> /etc/systemd/system/node-exporter.service
          echo "Type=simple" >> /etc/systemd/system/node-exporter.service
          echo "ExecStart=/usr/local/bin/node_exporter" >> /etc/systemd/system/node-exporter.service
          echo "[Install]" >> /etc/systemd/system/node-exporter.service
          echo "WantedBy=multi-user.target" >> /etc/systemd/system/node-exporter.service

          sudo touch /etc/prometheus/rules.yml
          echo "groups:
          echo "- name: Down
          echo "  rules:
          echo "  - alert: InstanceDown
          echo "    expr: up == 0
          echo "    for: 1m
          echo "    labels:
          echo "      severity: 'critical'
          echo "    annotations:
          echo "      summary: "Instance  is down"
          echo "      description: " of job  has been down for more than 1 minute."

          sudo touch /etc/prometheus/prometheus.yml
          echo "global:" > /etc/prometheus/prometheus.yml
          echo "  scrape_interval: 5s" >> /etc/prometheus/prometheus.yml
          echo "  evaluation_interval: 5s" >> /etc/prometheus/prometheus.yml
          echo "  external_labels:" >> /etc/prometheus/prometheus.yml
          echo "    monitor: 'prometheus'" >> /etc/prometheus/prometheus.yml
          echo "rule_files:" >> /etc/prometheus/prometheus.yml
          echo "  - /etc/prometheus/rules.yml" >> /etc/prometheus/prometheus.yml
          echo "alerting:" >> /etc/prometheus/prometheus.yml
          echo "  alertmanagers:" >> /etc/prometheus/prometheus.yml
          echo "    - static_configs:" >> /etc/prometheus/prometheus.yml
          echo "      - targets:" >> /etc/prometheus/prometheus.yml
          echo "          - localhost:9093"
          echo "scrape_configs:" >> /etc/prometheus/prometheus.yml
          echo "  - job_name: 'node'" >> /etc/prometheus/prometheus.yml
          echo "    ec2_sd_configs:" >> /etc/prometheus/prometheus.yml
          echo "      - region: us-east-1" >> /etc/prometheus/prometheus.yml
          echo "        access_key: AKIAWME2J2TO7SJXMCRO" >> /etc/prometheus/prometheus.yml
          echo "        secret_key: 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" >> /etc/prometheus/prometheus.yml
          echo "        port: 9100" >> /etc/prometheus/prometheus.yml

          sudo touch /etc/systemd/system/prometheus.service
          echo "[Unit]" >> /etc/systemd/system/prometheus.service
          echo "Description=Prometheus" >> /etc/systemd/system/prometheus.service
          echo "Wants=network-online.target" >> /etc/systemd/system/prometheus.service
          echo "After=network-online.target" >> /etc/systemd/system/prometheus.service
          echo "[Service]" >> /etc/systemd/system/prometheus.service
          echo "User=prometheus" >> /etc/systemd/system/prometheus.service
          echo "Group=prometheus" >> /etc/systemd/system/prometheus.service
          echo "Type=simple" >> /etc/systemd/system/prometheus.service
          echo "ExecStart=/usr/local/bin/prometheus \" >> /etc/systemd/system/prometheus.service
          echo "    --config.file /etc/prometheus/prometheus.yml \" >> /etc/systemd/system/prometheus.service
          echo "    --storage.tsdb.path /var/lib/prometheus/ \" >> /etc/systemd/system/prometheus.service
          echo "    --web.console.templates=/etc/prometheus/consoles \" >> /etc/systemd/system/prometheus.service
          echo "    --web.console.libraries=/etc/prometheus/console_libraries" >> /etc/systemd/system/prometheus.service
          echo "[Install]" >> /etc/systemd/system/prometheus.service
          echo "WantedBy=multi-user.target" >> /etc/systemd/system/prometheus.service
          sudo touch /etc/prometheus/alertmanager.yml
          echo "global:" >> /etc/prometheus/alertmanager.yml
          echo "  resolve_timeout: 1m" >> /etc/prometheus/alertmanager.yml
          echo "  slack_api_url: 'https://hooks.slack.com/services/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'" >> /etc/prometheus/alertmanager.yml
          echo "route:" >> /etc/prometheus/alertmanager.yml
          echo "  receiver: 'slack-notifications'" >> /etc/prometheus/alertmanager.yml
          echo "receivers:" >> /etc/prometheus/alertmanager.yml
          echo "- name: 'slack-notifications'" >> /etc/prometheus/alertmanager.yml
          echo "  slack_configs:" >> /etc/prometheus/alertmanager.yml
          echo "  - channel: '#learning'" >> /etc/prometheus/alertmanager.yml
          echo "    send_resolved: true" >> /etc/prometheus/alertmanager.yml

          sudo touch /etc/systemd/system/alertmanager.service
          echo "[Unit]" >> /etc/systemd/system/alertmanager.service
          echo "Description=Alert Manager" >> /etc/systemd/system/alertmanager.service
          echo "Wants=network-online.target" >> /etc/systemd/system/alertmanager.service
          echo "After=network-online.target" >> /etc/systemd/system/alertmanager.service
          echo "[Service]" >> /etc/systemd/system/alertmanager.service
          echo "Type=simple" >> /etc/systemd/system/alertmanager.service
          echo "User=prometheus" >> /etc/systemd/system/alertmanager.service
          echo "Group=prometheus" >> /etc/systemd/system/alertmanager.service
          echo "ExecStart=/usr/local/bin/alertmanager \" >> /etc/systemd/system/alertmanager.service
          echo "  --config.file=/etc/prometheus/alertmanager.yml \" >> /etc/systemd/system/alertmanager.service
          echo "  --storage.path=/var/lib/alertmanager" >> /etc/systemd/system/alertmanager.service
          echo "Restart=always" >> /etc/systemd/system/alertmanager.service
          echo "[Install]" >> /etc/systemd/system/alertmanager.service
          echo "WantedBy=multi-user.target" >> /etc/systemd/system/alertmanager.service

          sudo chown prometheus:prometheus /etc/prometheus
          sudo chown prometheus:prometheus /usr/local/bin/prometheus
          sudo chown prometheus:prometheus /usr/local/bin/promtool
          sudo chown -R prometheus:prometheus /etc/prometheus/consoles
          sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries
          sudo chown -R prometheus:prometheus /var/lib/prometheus

          sudo systemctl daemon-reload
          sudo systemctl enable prometheus
          sudo systemctl start prometheus
          sudo systemctl enable node-exporter
          sudo systemctl start node-exporter
          sudo systemctl enable alertmanager
          sudo systemctl start alertmanager
      Tags:
        - Key: Name
          Value: Uda-prom